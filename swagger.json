
{
  "openapi": "3.0.0",
  "info": {
    "title": "WaterTracker",
    "description": "",
    "version": "1.0.8"
  },
  "servers": [
    {
      "url": "https://watertracker-t8-backend.onrender.com"
    },
    {
      "url": "http://localhost:3000",
      "description": "Local server"
    }
  ],
  "tags": [
    {
      "name": "Auth",
      "description": "Authorization endpoints"
    },
    {
      "name": "User",
      "description": "User basic information"
    },
    {
      "name": "Waters",
      "description": "Waters endpoints"
    }
  ],
  "paths": {
    "/api/auth/register": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "User registration",
        "requestBody": {
          "description": "Registration user",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RegistrationRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "New user is created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RegistrationResponse"
                }
              }
            }
          },
          "400": {
            "description": "Email or password is Invalid",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorBadRequestResponse"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorConflictResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/auth/login": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "User login",
        "requestBody": {
          "description": "Login user",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RegistrationRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Login successful",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LoginResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorBadRequestResponse"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorConflictResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/auth/logout": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "User logout",
        "description": "Logout user",
        "responses": {
          "204": {
            "description": "User logout successfully"
          },
          "401": {
            "description": "Bearer auth failed",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LogoutResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/api/user/avatars": {
      "patch": {
        "tags": [
          "User"
        ],
        "summary": "User's avatar",
        "requestBody": {
          "description": "Add  user avatar",
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/UserAvatarRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "User avatar is add success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserAvatarResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorBadRequestResponse"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorConflictResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/user/current": {
      "get": {
        "tags": [
          "User"
        ],
        "summary": "User's info",
        "description": "Get user info",
        "parameters": [],
        "responses": {
          "200": {
            "description": "User avatar is updated success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserInfoResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorNotFoundResponse"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "User"
        ],
        "summary": "User's update info",
        "requestBody": {
          "description": "User's new info",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserUpdateInfoRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "User's info  updated success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserUpdateInfoResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorNotFoundResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/waters/water_rate": {
      "patch": {
        "tags": [
          "Waters"
        ],
        "summary": "User's avatar",
        "requestBody": {
          "description": "Update user avatar",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WaterUpdateRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "User avatar is updated success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WaterUpdateResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorBadRequestResponse"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorConflictResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/waters": {
      "put": {
        "tags": [
          "Waters"
        ],
        "summary": "User's info",
        "requestBody": {
          "description": "Get user info",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserInfoRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "User avatar is updated success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserInfoResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorNotFoundResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/waters/:id": {
      "put": {
        "tags": [
          "Waters"
        ],
        "summary": "User's info",
        "requestBody": {
          "description": "Get user info",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserInfoRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "User avatar is updated success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserInfoResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorNotFoundResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Waters"
        ],
        "summary": "User's info",
        "description": "Get user info",
        "parameters": [],
        "responses": {
          "200": {
            "description": "User avatar is updated success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserInfoResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorNotFoundResponse"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "RegistrationRequest": {
        "required": [
          "email",
          "password"
        ],
        "type": "object",
        "properties": {
          "email": {
            "pattern": "allow:[com, net]",
            "type": "string",
            "description": "User's email",
            "format": "email"
          },
          "password": {
            "maximum": 64,
            "minimum": 8,
            "type": "string",
            "description": "User's password",
            "format": "password",
            "example": "qwerty12345"
          }
        }
      },
      "RegistrationResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "description": "201"
          },
          "message": {
            "type": "string",
            "description": "New user is created"
          }
        }
      },
      "LoginResponse": {
        "required": [
          "token"
        ],
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "example": "Login UserEmail successful"
          },
          "token": {
            "type": "string",
            "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY2MGMxNDYxNGM1MGRiMTNjNjk1N2MxMiIsImlhdCI6MTcxMjA2NzcyMiwiZXhwIjoxNzEyMTUwNTIyfQ.dftMsB6Sz2bzb5HEYmGWRgM9G3tAdTXVH0rYrxW4b6U"
          }
        }
      },
      "LogoutRequest": {
        "required": [
          "token"
        ],
        "type": "object",
        "properties": {
          "token": {
            "type": "string",
            "description": "User's token",
            "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY2MGMxNDYxNGM1MGRiMTNjNjk1N2MxMiIsImlhdCI6MTcxMjA2NzcyMiwiZXhwIjoxNzEyMTUwNTIyfQ.dftMsB6Sz2bzb5HEYmGWRgM9G3tAdTXVH0rYrxW4b6U"
          }
        }
      },
      "LogoutResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "description": "204"
          },
          "message": {
            "type": "string",
            "description": "User logout successfully"
          }
        }
      },
      "UserAvatarRequest": {
        "required": [
          "avatar"
        ],
        "type": "object",
        "properties": {
          "avatar": {
            "type": "string",
            "format": "binary"
          }
        }
      },
      "UserAvatarResponse": {
        "required": [
          "avatarURL"
        ],
        "type": "object",
        "properties": {
          "avatarURL": {
            "type": "string",
            "nullable": true,
            "example": ""
          }
        }
      },
      "UserInfoRequest": {
        "required": [
          "id"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique identifier of the user",
            "example": "65b55865b6b2ac84bc52a78y"
          }
        }
      },
      "UserInfoResponse": {
        "required": [
          "id",
          "user"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique identifier of the user",
            "example": "65b55865b6b2ac84bc52a78y"
          },
          "user": {
            "$ref": "#/components/schemas/UserInfoResponse_user"
          }
        }
      },
      "errorBadRequestResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "description": "400"
          },
          "message": {
            "type": "string",
            "description": "Error message"
          }
        }
      },
      "errorConflictResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "description": "409"
          },
          "message": {
            "type": "string",
            "description": "Email in use"
          }
        }
      },
      "errorUnauthorizedResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "description": "401"
          },
          "message": {
            "type": "string",
            "description": "Not authorized"
          }
        }
      },
      "errorNotFoundResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "description": "404"
          },
          "message": {
            "type": "string",
            "description": "Not found"
          }
        }
      },
      "errorServerResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "description": "500"
          },
          "message": {
            "type": "string",
            "description": "Server error"
          }
        }
      },
      "UserUpdateInfoRequest": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "UserUpdateInfoResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "WaterUpdateRequest": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "WaterUpdateResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "UserInfoResponse_user_waters": {
        "required": [
          "amount",
          "day",
          "month",
          "time",
          "year"
        ],
        "type": "object",
        "properties": {
          "day": {
            "pattern": "^(0[1-9]|[1-2][0-9]|3[0-1])$",
            "type": "string",
            "description": "The day of the month (two digits)",
            "format": "date"
          },
          "month": {
            "type": "string",
            "format": "date"
          },
          "year": {
            "type": "integer",
            "description": "Year",
            "format": "int32",
            "example": 2022
          },
          "time": {
            "type": "string",
            "format": "time",
            "example": "770"
          },
          "amount": {
            "type": "number",
            "description": "The amount of water",
            "example": 500
          }
        }
      },
      "UserInfoResponse_user_watersForDay": {
        "required": [
          "allAmountForDay",
          "day",
          "month",
          "waterRateForThisDay",
          "year"
        ],
        "type": "object",
        "properties": {
          "day": {
            "pattern": "^(0[1-9]|[1-2][0-9]|3[0-1])$",
            "type": "string",
            "description": "The day of the month (two digits)",
            "format": "date"
          },
          "month": {
            "type": "string",
            "format": "date"
          },
          "year": {
            "type": "integer",
            "description": "Year",
            "format": "int32",
            "example": 2022
          },
          "waterRateForThisDay": {
            "type": "number",
            "description": "The waterRate for this day",
            "example": 2500
          },
          "allAmountForDay": {
            "type": "number",
            "description": "The all amount of water of this day",
            "example": 500
          }
        }
      },
      "UserInfoResponse_user": {
        "required": [
          "avatarURL",
          "email",
          "gender",
          "name",
          "waterRate",
          "waters",
          "watersForDay"
        ],
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "description": "User's email"
          },
          "name": {
            "type": "string",
            "example": "UserName",
            "default": ""
          },
          "gender": {
            "type": "string",
            "nullable": true,
            "example": "female",
            "enum": [
              "male",
              "female"
            ]
          },
          "avatarURL": {
            "type": "string",
            "nullable": true,
            "example": ""
          },
          "waterRate": {
            "maximum": 15000,
            "minimum": 0,
            "type": "number"
          },
          "waters": {
            "$ref": "#/components/schemas/UserInfoResponse_user_waters"
          },
          "watersForDay": {
            "$ref": "#/components/schemas/UserInfoResponse_user_watersForDay"
          }
        }
      }
    },
    "securitySchemes": {
      "Bearer": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  }
}